require('dotenv').config();
const axios = require('axios');
const fs = require('fs');
const path = require('path');

const OWNER = 'YOUR_GITHUB_USERNAME';
const REPO = 'Website-Empire';
const BRANCH = 'main';

const createPR = async (filePath, commitMessage = 'Update via GPT', prTitle = 'AI Edit', prBody = 'Generated by GPT') => {
  const token = process.env.GITHUB_TOKEN;

  const getSha = async () => {
    const url = `https://api.github.com/repos/${OWNER}/${REPO}/git/ref/heads/${BRANCH}`;
    const headers = { Authorization: `Bearer ${token}` };
    const { data } = await axios.get(url, { headers });
    return data.object.sha;
  };

  const createBranch = async (newBranchName, sha) => {
    const url = `https://api.github.com/repos/${OWNER}/${REPO}/git/refs`;
    const headers = { Authorization: `Bearer ${token}` };
    const body = { ref: `refs/heads/${newBranchName}`, sha };
    await axios.post(url, body, { headers });
  };

  const commitToBranch = async (newBranchName, filePath) => {
    const url = `https://api.github.com/repos/${OWNER}/${REPO}/contents/${filePath}`;
    const headers = {
      Authorization: `Bearer ${token}`,
      Accept: 'application/vnd.github+json',
    };

    const localPath = path.join(__dirname, '..', filePath);
    const content = fs.readFileSync(localPath, 'utf8');
    const b64 = Buffer.from(content).toString('base64');

    const { data: fileData } = await axios.get(url + `?ref=${newBranchName}`, { headers });
    const sha = fileData.sha;

    await axios.put(
      url,
      {
        message: commitMessage,
        content: b64,
        branch: newBranchName,
        sha,
      },
      { headers }
    );
  };

  const openPR = async (newBranchName) => {
    const url = `https://api.github.com/repos/${OWNER}/${REPO}/pulls`;
    const headers = { Authorization: `Bearer ${token}` };
    const body = {
      title: prTitle,
      head: newBranchName,
      base: BRANCH,
      body: prBody,
    };
    await axios.post(url, body, { headers });
  };

  const newBranch = `gpt-edit-${Date.now()}`;
  const sha = await getSha();
  await createBranch(newBranch, sha);
  await commitToBranch(newBranch, filePath);
  await openPR(newBranch);
  console.log(`âœ… Pull Request created for ${filePath}`);
};

const filePath = process.argv[2];
if (!filePath) {
  console.log('Usage: node create-pr.js <relative/path/to/file>');
  process.exit(1);
}

createPR(filePath);
